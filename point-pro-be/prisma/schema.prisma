generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model categories {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title      String    @unique @db.VarChar(50)
  position   Int?      @default(0) @db.SmallInt
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  meals      meals[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model login_logs {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  log_type       log_type? @default(LOGIN)
  operation_time DateTime? @default(now()) @db.Timestamptz(6)
  user_id        String    @db.Uuid
  users          users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model meal_specialties {
  meal_id      String      @db.Uuid
  specialty_id String      @db.Uuid
  meals        meals       @relation(fields: [meal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  specialties  specialties @relation(fields: [specialty_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([meal_id, specialty_id])
}

model meal_specialty_items {
  meal_id           String          @db.Uuid
  specialty_item_id String          @db.Uuid
  meals             meals           @relation(fields: [meal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  specialty_items   specialty_items @relation(fields: [specialty_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([meal_id, specialty_item_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model meals {
  id                   String                 @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title                String                 @unique @db.VarChar(50)
  cover_url            String?                @default("") @db.VarChar(255)
  description          String?                @default("")
  is_popular           Boolean?               @default(false)
  price                Int?                   @default(0)
  position             Int?                   @default(0) @db.SmallInt
  published_at         DateTime?              @default(now()) @db.Timestamptz(6)
  created_at           DateTime?              @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?              @default(now()) @db.Timestamptz(6)
  category_id          String?                @db.Uuid
  meal_specialties     meal_specialties[]
  meal_specialty_items meal_specialty_items[]
  categories           categories?            @relation(fields: [category_id], references: [id], onUpdate: NoAction)
  order_meals          order_meals[]
}

model order_meal_specialties {
  order_meal_id String      @db.Uuid
  specialty_id  String      @db.Uuid
  order_meals   order_meals @relation(fields: [order_meal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  specialties   specialties @relation(fields: [specialty_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([order_meal_id, specialty_id])
}

model order_meal_specialty_items {
  order_meal_id     String          @db.Uuid
  specialty_item_id String          @db.Uuid
  order_meals       order_meals     @relation(fields: [order_meal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  specialty_items   specialty_items @relation(fields: [specialty_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([order_meal_id, specialty_item_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model order_meals {
  id                         String                       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  amount                     Int                          @db.SmallInt
  served_amount              Int?                         @default(0) @db.SmallInt
  order_id                   String                       @db.Uuid
  meal_id                    String                       @db.Uuid
  order_meal_specialties     order_meal_specialties[]
  order_meal_specialty_items order_meal_specialty_items[]
  meals                      meals                        @relation(fields: [meal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  orders                     orders                       @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model orders {
  id              String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  status          order_status?  @default(WORKING)
  type            order_type?    @default(DINE_IN)
  created_at      DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?      @default(now()) @db.Timestamptz(6)
  walk_in_user_id String?        @db.Uuid
  user_id         String?        @db.Uuid
  reservation_id  String?        @db.Uuid
  payment_id      String?        @db.Uuid
  order_meals     order_meals[]
  payments        payments?      @relation(fields: [payment_id], references: [id], onUpdate: NoAction)
  reservations    reservations?  @relation(fields: [reservation_id], references: [id], onUpdate: NoAction)
  users           users?         @relation(fields: [user_id], references: [id], onUpdate: NoAction)
  walk_in_users   walk_in_users? @relation(fields: [walk_in_user_id], references: [id], onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model payments {
  id         String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  payment_no String?         @unique
  price      Int
  gateway    String          @db.VarChar(50)
  status     payment_status? @default(UNPAID)
  created_at DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at DateTime?       @default(now()) @db.Timestamptz(6)
  orders     orders[]
}

model period_seats {
  period_id                String                     @db.Uuid
  seat_id                  String                     @db.Uuid
  periods                  periods                    @relation(fields: [period_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  seats                    seats                      @relation(fields: [seat_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  reservation_period_seats reservation_period_seats[]

  @@id([period_id, seat_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model periods {
  id           String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  start_time   DateTime       @db.Timestamptz(6)
  end_time     DateTime       @db.Timestamptz(6)
  created_at   DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?      @default(now()) @db.Timestamptz(6)
  period_seats period_seats[]
  reservations reservations[]
}

model reservation_period_seats {
  reservation_id String       @db.Uuid
  period_id      String       @db.Uuid
  seat_id        String       @db.Uuid
  period_seats   period_seats @relation(fields: [period_id, seat_id], references: [period_id, seat_id], onDelete: Cascade, onUpdate: NoAction)
  reservations   reservations @relation(fields: [reservation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([reservation_id, period_id, seat_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model reservations {
  id                       String                     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  type                     reservation_type?          @default(ONLINE)
  is_cancelled             Boolean?                   @default(false)
  people                   Int?                       @default(1) @db.SmallInt
  start_at                 DateTime?                  @db.Timestamptz(6)
  end_at                   DateTime?                  @db.Timestamptz(6)
  created_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  user_id                  String                     @db.Uuid
  period_id                String                     @db.Uuid
  orders                   orders[]
  reservation_period_seats reservation_period_seats[]
  periods                  periods                    @relation(fields: [period_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                    users                      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model seats {
  id           String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  seat_no      String         @unique @db.VarChar(5)
  capacity     Int            @db.SmallInt
  created_at   DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?      @default(now()) @db.Timestamptz(6)
  period_seats period_seats[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model specialties {
  id                     String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title                  String                   @unique @db.VarChar(50)
  selection_type         selection_type?          @default(SINGLE)
  position               Int?                     @default(0) @db.SmallInt
  created_at             DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?                @default(now()) @db.Timestamptz(6)
  meal_specialties       meal_specialties[]
  order_meal_specialties order_meal_specialties[]
  specialty_items        specialty_items[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model specialty_items {
  id                         String                       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title                      String                       @unique @db.VarChar(50)
  price                      Int?                         @default(0)
  position                   Int?                         @default(0) @db.SmallInt
  created_at                 DateTime?                    @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?                    @default(now()) @db.Timestamptz(6)
  specialty_id               String?                      @db.Uuid
  meal_specialty_items       meal_specialty_items[]
  order_meal_specialty_items order_meal_specialty_items[]
  specialties                specialties?                 @relation(fields: [specialty_id], references: [id], onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model users {
  id            String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  username      String         @db.VarChar(50)
  phone         String         @unique @db.VarChar(20)
  email         String?        @unique @db.VarChar(100)
  gender        gender?
  password_hash String?        @db.VarChar(255)
  role          role?          @default(CUSTOMER)
  created_at    DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?      @default(now()) @db.Timestamptz(6)
  login_logs    login_logs[]
  orders        orders[]
  reservations  reservations[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model walk_in_users {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  people     Int?      @default(1) @db.SmallInt
  start_at   DateTime? @db.Timestamptz(6)
  end_at     DateTime? @db.Timestamptz(6)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  orders     orders[]
}

enum gender {
  MALE
  FEMALE
  OTHER
}

enum log_type {
  LOGIN
  LOGOUT
}

enum order_status {
  WORKING
  FINISHED
  CANCEL
}

enum order_type {
  DINE_IN
  TAKE_OUT
}

enum payment_status {
  UNPAID
  SUCCESS
  CANCEL
}

enum reservation_type {
  ONLINE
  PHONE
}

enum role {
  CUSTOMER
  STAFF
  ADMIN
}

enum selection_type {
  SINGLE
  MULTIPLE
}

enum slot_status {
  AVAILABLE
  FULL
  UNAVAILABLE
}
